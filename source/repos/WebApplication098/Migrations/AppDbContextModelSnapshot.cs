// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication098.Data;

#nullable disable

namespace WebApplication098.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication098.Models.Admin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("OrganizationInfoid")
                        .HasColumnType("integer");

                    b.Property<int>("Organization_id")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.HasIndex("OrganizationInfoid");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("WebApplication098.Models.Organization", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("created_by")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("WebApplication098.Models.Project", b =>
                {
                    b.Property<int>("project_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("project_id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrganizationInfoid")
                        .HasColumnType("integer");

                    b.Property<int>("Organization_id")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("project_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("project_id");

                    b.HasIndex("OrganizationInfoid");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("WebApplication098.Models.TestCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAutomated")
                        .HasColumnType("boolean");

                    b.Property<int>("TestSuite_id")
                        .HasColumnType("integer");

                    b.Property<int>("TestSuite_infotestSuite_id")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("steps")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TestSuite_infotestSuite_id");

                    b.ToTable("TestCases");
                });

            modelBuilder.Entity("WebApplication098.Models.TestPlan", b =>
                {
                    b.Property<int>("TestPlan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TestPlan_id"));

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("objective")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("project_id")
                        .HasColumnType("integer");

                    b.Property<int>("project_infoproject_id")
                        .HasColumnType("integer");

                    b.Property<string>("strategy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TestPlan_id");

                    b.HasIndex("project_infoproject_id");

                    b.ToTable("TestPlan");
                });

            modelBuilder.Entity("WebApplication098.Models.TestStep", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("ExpectedResult")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TestCase_id")
                        .HasColumnType("integer");

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("actualResult")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("testCase_infoId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("testCase_infoId");

                    b.ToTable("TestSteps");
                });

            modelBuilder.Entity("WebApplication098.Models.TestSuite", b =>
                {
                    b.Property<int>("testSuite_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("testSuite_id"));

                    b.Property<int>("TestPlanId")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("testSuite_id");

                    b.HasIndex("TestPlanId");

                    b.ToTable("TestSuite");
                });

            modelBuilder.Entity("WebApplication098.Models.Admin", b =>
                {
                    b.HasOne("WebApplication098.Models.Organization", "OrganizationInfo")
                        .WithMany()
                        .HasForeignKey("OrganizationInfoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationInfo");
                });

            modelBuilder.Entity("WebApplication098.Models.Project", b =>
                {
                    b.HasOne("WebApplication098.Models.Organization", "OrganizationInfo")
                        .WithMany("Projects")
                        .HasForeignKey("OrganizationInfoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationInfo");
                });

            modelBuilder.Entity("WebApplication098.Models.TestCase", b =>
                {
                    b.HasOne("WebApplication098.Models.TestSuite", "TestSuite_info")
                        .WithMany("TestCases")
                        .HasForeignKey("TestSuite_infotestSuite_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestSuite_info");
                });

            modelBuilder.Entity("WebApplication098.Models.TestPlan", b =>
                {
                    b.HasOne("WebApplication098.Models.Project", "project_info")
                        .WithMany("TestPlans")
                        .HasForeignKey("project_infoproject_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project_info");
                });

            modelBuilder.Entity("WebApplication098.Models.TestStep", b =>
                {
                    b.HasOne("WebApplication098.Models.TestCase", "testCase_info")
                        .WithMany("TestSteps")
                        .HasForeignKey("testCase_infoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("testCase_info");
                });

            modelBuilder.Entity("WebApplication098.Models.TestSuite", b =>
                {
                    b.HasOne("WebApplication098.Models.TestPlan", "TestPlan")
                        .WithMany("TestSuites")
                        .HasForeignKey("TestPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestPlan");
                });

            modelBuilder.Entity("WebApplication098.Models.Organization", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WebApplication098.Models.Project", b =>
                {
                    b.Navigation("TestPlans");
                });

            modelBuilder.Entity("WebApplication098.Models.TestCase", b =>
                {
                    b.Navigation("TestSteps");
                });

            modelBuilder.Entity("WebApplication098.Models.TestPlan", b =>
                {
                    b.Navigation("TestSuites");
                });

            modelBuilder.Entity("WebApplication098.Models.TestSuite", b =>
                {
                    b.Navigation("TestCases");
                });
#pragma warning restore 612, 618
        }
    }
}
